name: Build, Test & SonarCloud (Debug Coverage)

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-test-sonar:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install SonarScanner
        run: dotnet tool update dotnet-sonarscanner --tool-path .sonar

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\dotnet-sonarscanner begin `
            /k:"Jsmuk_PlumExtract" `
            /o:"jsmuk" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.cobertura.reportsPaths="coverage/merged-cobertura.xml" `
            /d:sonar.verbose=true

      - name: Restore and Build
        run: dotnet build PlumExtract.sln --configuration Debug

      - name: Run Tests with Coverage
        run: dotnet test PlumExtract.sln --no-build --configuration Debug --collect:"XPlat Code Coverage"

      - name: Copy First Coverage File
        shell: powershell
        run: |
          $coverage = Get-ChildItem -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1
          if (-not $coverage) {
            Write-Error "❌ No coverage file found!"
            exit 1
          }
          mkdir coverage
          Copy-Item $coverage.FullName coverage\merged-cobertura.xml
          Write-Host "✅ Copied coverage report from $($coverage.FullName)"

      - name: Show Coverage File Summary
        run: |
          type coverage\merged-cobertura.xml

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

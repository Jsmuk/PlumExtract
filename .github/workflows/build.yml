name: Build, Test & SonarCloud (dotCover)

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-test-sonar:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install dotCover global tool
        run: dotnet tool install --global JetBrains.dotCover.CommandLineTools

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Add .dotnet/tools to PATH
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Install SonarScanner
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"Jsmuk_PlumExtract" `
            /o:"jsmuk" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.dotcover.reportsPaths="coverage/report/SonarQube.xml" `
            /d:sonar.verbose=true

      - name: Restore dependencies
        run: dotnet restore PlumExtract.sln

      - name: Build solution
        run: dotnet build PlumExtract.sln --configuration Debug --no-restore

      - name: Run tests with dotCover
        run: |
          dotCover cover `
            --TargetExecutable="C:\Program Files\dotnet\dotnet.exe" `
            --TargetArguments="test PlumExtract.sln --no-build --configuration Debug" `
            --Output="coverage/dotCover.dcvr" `
            --WorkingDir="${{ github.workspace }}" `
            --ReturnTargetExitCode

      - name: Convert dotCover to Sonar-compatible XML
        run: |
          reportgenerator `
            -reports:coverage/dotCover.dcvr `
            -targetdir:coverage/report `
            -reporttypes:SonarQube `
            -assemblyfilters:+* `
            -filefilters:+* `
            -sourcedirs:${{ github.workspace }} `
            -verbosity:Info

      - name: Preview SonarQube report
        shell: powershell
        run: |
          if (-not (Test-Path "coverage/report/SonarQube.xml")) {
            Write-Error "❌ SonarQube.xml not found!"
            exit 1
          }
          Write-Host "✅ SonarQube report preview:"
          Get-Content coverage/report/SonarQube.xml -TotalCount 20

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
